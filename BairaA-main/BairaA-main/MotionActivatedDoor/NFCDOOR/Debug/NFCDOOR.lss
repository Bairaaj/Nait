
NFCDOOR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000300  00000394  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000300  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800110  00800110  000003a4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000414  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c34  00000000  00000000  000004ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000087f  00000000  00000000  000010e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000544  00000000  00000000  0000195f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000015c  00000000  00000000  00001ea4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000643  00000000  00000000  00002000  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000377  00000000  00000000  00002643  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  000029ba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 33 01 	jmp	0x266	; 0x266 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 4d 01 	jmp	0x29a	; 0x29a <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e0       	ldi	r30, 0x00	; 0
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 31       	cpi	r26, 0x11	; 17
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 00 01 	call	0x200	; 0x200 <main>
  9e:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <SCI0_Init>:
  a6:	cf 92       	push	r12
  a8:	df 92       	push	r13
  aa:	ef 92       	push	r14
  ac:	ff 92       	push	r15
  ae:	0f 93       	push	r16
  b0:	1f 93       	push	r17
  b2:	6b 01       	movw	r12, r22
  b4:	7c 01       	movw	r14, r24
  b6:	cc 0c       	add	r12, r12
  b8:	dd 1c       	adc	r13, r13
  ba:	ee 1c       	adc	r14, r14
  bc:	ff 1c       	adc	r15, r15
  be:	d7 01       	movw	r26, r14
  c0:	c6 01       	movw	r24, r12
  c2:	88 0f       	add	r24, r24
  c4:	99 1f       	adc	r25, r25
  c6:	aa 1f       	adc	r26, r26
  c8:	bb 1f       	adc	r27, r27
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	aa 1f       	adc	r26, r26
  d0:	bb 1f       	adc	r27, r27
  d2:	8c 0d       	add	r24, r12
  d4:	9d 1d       	adc	r25, r13
  d6:	ae 1d       	adc	r26, r14
  d8:	bf 1d       	adc	r27, r15
  da:	bc 01       	movw	r22, r24
  dc:	cd 01       	movw	r24, r26
  de:	68 94       	set
  e0:	13 f8       	bld	r1, 3
  e2:	96 95       	lsr	r25
  e4:	87 95       	ror	r24
  e6:	77 95       	ror	r23
  e8:	67 95       	ror	r22
  ea:	16 94       	lsr	r1
  ec:	d1 f7       	brne	.-12     	; 0xe2 <SCI0_Init+0x3c>
  ee:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <__udivmodsi4>
  f2:	ca 01       	movw	r24, r20
  f4:	b9 01       	movw	r22, r18
  f6:	6b 5f       	subi	r22, 0xFB	; 251
  f8:	7f 4f       	sbci	r23, 0xFF	; 255
  fa:	8f 4f       	sbci	r24, 0xFF	; 255
  fc:	9f 4f       	sbci	r25, 0xFF	; 255
  fe:	2a e0       	ldi	r18, 0x0A	; 10
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	40 e0       	ldi	r20, 0x00	; 0
 104:	50 e0       	ldi	r21, 0x00	; 0
 106:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <__udivmodsi4>
 10a:	21 50       	subi	r18, 0x01	; 1
 10c:	31 09       	sbc	r19, r1
 10e:	21 15       	cp	r18, r1
 110:	80 e1       	ldi	r24, 0x10	; 16
 112:	38 07       	cpc	r19, r24
 114:	c8 f4       	brcc	.+50     	; 0x148 <SCI0_Init+0xa2>
 116:	e4 e6       	ldi	r30, 0x64	; 100
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	80 81       	ld	r24, Z
 11c:	8d 7f       	andi	r24, 0xFD	; 253
 11e:	80 83       	st	Z, r24
 120:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 124:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 128:	88 e1       	ldi	r24, 0x18	; 24
 12a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 12e:	86 e0       	ldi	r24, 0x06	; 6
 130:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 134:	01 2b       	or	r16, r17
 136:	59 f0       	breq	.+22     	; 0x14e <SCI0_Init+0xa8>
 138:	e1 ec       	ldi	r30, 0xC1	; 193
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	80 68       	ori	r24, 0x80	; 128
 140:	80 83       	st	Z, r24
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	05 c0       	rjmp	.+10     	; 0x152 <SCI0_Init+0xac>
 148:	8f ef       	ldi	r24, 0xFF	; 255
 14a:	9f ef       	ldi	r25, 0xFF	; 255
 14c:	02 c0       	rjmp	.+4      	; 0x152 <SCI0_Init+0xac>
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	1f 91       	pop	r17
 154:	0f 91       	pop	r16
 156:	ff 90       	pop	r15
 158:	ef 90       	pop	r14
 15a:	df 90       	pop	r13
 15c:	cf 90       	pop	r12
 15e:	08 95       	ret

00000160 <SCI0_BSend>:
 160:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 164:	95 ff       	sbrs	r25, 5
 166:	fc cf       	rjmp	.-8      	; 0x160 <SCI0_BSend>
 168:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 16c:	96 ff       	sbrs	r25, 6
 16e:	03 c0       	rjmp	.+6      	; 0x176 <SCI0_BSend+0x16>
 170:	90 e4       	ldi	r25, 0x40	; 64
 172:	90 93 c0 00 	sts	0x00C0, r25	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 176:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 17a:	08 95       	ret

0000017c <SCI0_TxString>:
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
 180:	ec 01       	movw	r28, r24
 182:	03 c0       	rjmp	.+6      	; 0x18a <SCI0_TxString+0xe>
 184:	0e 94 b0 00 	call	0x160	; 0x160 <SCI0_BSend>
 188:	21 96       	adiw	r28, 0x01	; 1
 18a:	88 81       	ld	r24, Y
 18c:	81 11       	cpse	r24, r1
 18e:	fa cf       	rjmp	.-12     	; 0x184 <SCI0_TxString+0x8>
 190:	df 91       	pop	r29
 192:	cf 91       	pop	r28
 194:	08 95       	ret

00000196 <Timer_Init>:
 196:	e4 e6       	ldi	r30, 0x64	; 100
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	90 81       	ld	r25, Z
 19c:	97 7f       	andi	r25, 0xF7	; 247
 19e:	90 83       	st	Z, r25
 1a0:	e1 e8       	ldi	r30, 0x81	; 129
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	10 82       	st	Z, r1
 1a6:	90 81       	ld	r25, Z
 1a8:	89 2b       	or	r24, r25
 1aa:	80 83       	st	Z, r24
 1ac:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 1b0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 1b4:	68 0f       	add	r22, r24
 1b6:	79 1f       	adc	r23, r25
 1b8:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 1bc:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 1c0:	82 e0       	ldi	r24, 0x02	; 2
 1c2:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
 1c6:	08 95       	ret

000001c8 <Timer_F_PWM0>:
 1c8:	e4 e6       	ldi	r30, 0x64	; 100
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	90 81       	ld	r25, Z
 1ce:	9f 7d       	andi	r25, 0xDF	; 223
 1d0:	90 83       	st	Z, r25
 1d2:	81 11       	cpse	r24, r1
 1d4:	14 c0       	rjmp	.+40     	; 0x1fe <Timer_F_PWM0+0x36>
 1d6:	41 11       	cpse	r20, r1
 1d8:	03 c0       	rjmp	.+6      	; 0x1e0 <Timer_F_PWM0+0x18>
 1da:	83 e8       	ldi	r24, 0x83	; 131
 1dc:	84 bd       	out	0x24, r24	; 36
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <Timer_F_PWM0+0x1c>
 1e0:	83 ec       	ldi	r24, 0xC3	; 195
 1e2:	84 bd       	out	0x24, r24	; 36
 1e4:	65 bd       	out	0x25, r22	; 37
 1e6:	8f e7       	ldi	r24, 0x7F	; 127
 1e8:	87 bd       	out	0x27, r24	; 39
 1ea:	8a b1       	in	r24, 0x0a	; 10
 1ec:	80 64       	ori	r24, 0x40	; 64
 1ee:	8a b9       	out	0x0a, r24	; 10
 1f0:	23 2b       	or	r18, r19
 1f2:	29 f0       	breq	.+10     	; 0x1fe <Timer_F_PWM0+0x36>
 1f4:	ee e6       	ldi	r30, 0x6E	; 110
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	80 81       	ld	r24, Z
 1fa:	81 60       	ori	r24, 0x01	; 1
 1fc:	80 83       	st	Z, r24
 1fe:	08 95       	ret

00000200 <main>:

volatile unsigned char _PWM_DutyVal = 0;

int main(void)
{
	SCI0_Init(F_CPU, 9600, 0);
 200:	00 e0       	ldi	r16, 0x00	; 0
 202:	10 e0       	ldi	r17, 0x00	; 0
 204:	20 e8       	ldi	r18, 0x80	; 128
 206:	35 e2       	ldi	r19, 0x25	; 37
 208:	40 e0       	ldi	r20, 0x00	; 0
 20a:	50 e0       	ldi	r21, 0x00	; 0
 20c:	60 e8       	ldi	r22, 0x80	; 128
 20e:	74 e8       	ldi	r23, 0x84	; 132
 210:	8e e1       	ldi	r24, 0x1E	; 30
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	0e 94 53 00 	call	0xa6	; 0xa6 <SCI0_Init>
	

	SCI0_TxString("\n328 Up! PWM!\n");
 218:	80 e0       	ldi	r24, 0x00	; 0
 21a:	91 e0       	ldi	r25, 0x01	; 1
 21c:	0e 94 be 00 	call	0x17c	; 0x17c <SCI0_TxString>

	Timer_Init(Timer_Prescale_8, _Timer_OC_Offset); // 1ms intervals
 220:	6a ef       	ldi	r22, 0xFA	; 250
 222:	70 e0       	ldi	r23, 0x00	; 0
 224:	82 e0       	ldi	r24, 0x02	; 2
 226:	0e 94 cb 00 	call	0x196	; 0x196 <Timer_Init>
	
	// bring up pwm (debug)
	Timer_F_PWM0(Timer_PWM_Channel_OC0A, Timer_PWM_ClockSel_Div64, Timer_PWM_Pol_NonInverting, 1);
 22a:	21 e0       	ldi	r18, 0x01	; 1
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	40 e0       	ldi	r20, 0x00	; 0
 230:	63 e0       	ldi	r22, 0x03	; 3
 232:	80 e0       	ldi	r24, 0x00	; 0
 234:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <Timer_F_PWM0>
	
	sleep_enable();
 238:	83 b7       	in	r24, 0x33	; 51
 23a:	81 60       	ori	r24, 0x01	; 1
 23c:	83 bf       	out	0x33, r24	; 51
	
	DDRC &= (~0b00000001);
 23e:	87 b1       	in	r24, 0x07	; 7
 240:	8e 7f       	andi	r24, 0xFE	; 254
 242:	87 b9       	out	0x07, r24	; 7
	
	DDRD |= 1 << PORTD7; // make portd pin 7 an output (PD7)
 244:	8a b1       	in	r24, 0x0a	; 10
 246:	80 68       	ori	r24, 0x80	; 128
 248:	8a b9       	out	0x0a, r24	; 10
	// set the global interrupt flag (enable interrupts)
	sei();
 24a:	78 94       	sei
	
	// main program loop - don't exit
	while(1)
	{
		if((PINC & (1 << PINC0)) == 0)
 24c:	30 99       	sbic	0x06, 0	; 6
 24e:	06 c0       	rjmp	.+12     	; 0x25c <main+0x5c>
		{
			//pin 7
			PIND = 0b10000000;
 250:	80 e8       	ldi	r24, 0x80	; 128
 252:	89 b9       	out	0x09, r24	; 9
			//pin 12 on atpmega or PIN 6 PD7
			_PWM_DutyVal = 30; 
 254:	8e e1       	ldi	r24, 0x1E	; 30
 256:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
 25a:	f8 cf       	rjmp	.-16     	; 0x24c <main+0x4c>
		}
		else
		{
			PIND = 0b00000000;
 25c:	19 b8       	out	0x09, r1	; 9
			_PWM_DutyVal = 70;
 25e:	86 e4       	ldi	r24, 0x46	; 70
 260:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
 264:	f3 cf       	rjmp	.-26     	; 0x24c <main+0x4c>

00000266 <__vector_11>:
	

}

ISR(TIMER1_COMPA_vect)
{
 266:	1f 92       	push	r1
 268:	0f 92       	push	r0
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	0f 92       	push	r0
 26e:	11 24       	eor	r1, r1
 270:	8f 93       	push	r24
 272:	9f 93       	push	r25
 274:	ef 93       	push	r30
 276:	ff 93       	push	r31
	// rearm the output compare operation
	OCR1A += _Timer_OC_Offset; // 1ms intervals
 278:	e8 e8       	ldi	r30, 0x88	; 136
 27a:	f0 e0       	ldi	r31, 0x00	; 0
 27c:	80 81       	ld	r24, Z
 27e:	91 81       	ldd	r25, Z+1	; 0x01
 280:	86 50       	subi	r24, 0x06	; 6
 282:	9f 4f       	sbci	r25, 0xFF	; 255
 284:	91 83       	std	Z+1, r25	; 0x01
 286:	80 83       	st	Z, r24
}
 288:	ff 91       	pop	r31
 28a:	ef 91       	pop	r30
 28c:	9f 91       	pop	r25
 28e:	8f 91       	pop	r24
 290:	0f 90       	pop	r0
 292:	0f be       	out	0x3f, r0	; 63
 294:	0f 90       	pop	r0
 296:	1f 90       	pop	r1
 298:	18 95       	reti

0000029a <__vector_16>:

ISR (TIMER0_OVF_vect)
{
 29a:	1f 92       	push	r1
 29c:	0f 92       	push	r0
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	0f 92       	push	r0
 2a2:	11 24       	eor	r1, r1
 2a4:	8f 93       	push	r24
	OCR0A = _PWM_DutyVal;
 2a6:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 2aa:	87 bd       	out	0x27, r24	; 39
}
 2ac:	8f 91       	pop	r24
 2ae:	0f 90       	pop	r0
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	0f 90       	pop	r0
 2b4:	1f 90       	pop	r1
 2b6:	18 95       	reti

000002b8 <__udivmodsi4>:
 2b8:	a1 e2       	ldi	r26, 0x21	; 33
 2ba:	1a 2e       	mov	r1, r26
 2bc:	aa 1b       	sub	r26, r26
 2be:	bb 1b       	sub	r27, r27
 2c0:	fd 01       	movw	r30, r26
 2c2:	0d c0       	rjmp	.+26     	; 0x2de <__udivmodsi4_ep>

000002c4 <__udivmodsi4_loop>:
 2c4:	aa 1f       	adc	r26, r26
 2c6:	bb 1f       	adc	r27, r27
 2c8:	ee 1f       	adc	r30, r30
 2ca:	ff 1f       	adc	r31, r31
 2cc:	a2 17       	cp	r26, r18
 2ce:	b3 07       	cpc	r27, r19
 2d0:	e4 07       	cpc	r30, r20
 2d2:	f5 07       	cpc	r31, r21
 2d4:	20 f0       	brcs	.+8      	; 0x2de <__udivmodsi4_ep>
 2d6:	a2 1b       	sub	r26, r18
 2d8:	b3 0b       	sbc	r27, r19
 2da:	e4 0b       	sbc	r30, r20
 2dc:	f5 0b       	sbc	r31, r21

000002de <__udivmodsi4_ep>:
 2de:	66 1f       	adc	r22, r22
 2e0:	77 1f       	adc	r23, r23
 2e2:	88 1f       	adc	r24, r24
 2e4:	99 1f       	adc	r25, r25
 2e6:	1a 94       	dec	r1
 2e8:	69 f7       	brne	.-38     	; 0x2c4 <__udivmodsi4_loop>
 2ea:	60 95       	com	r22
 2ec:	70 95       	com	r23
 2ee:	80 95       	com	r24
 2f0:	90 95       	com	r25
 2f2:	9b 01       	movw	r18, r22
 2f4:	ac 01       	movw	r20, r24
 2f6:	bd 01       	movw	r22, r26
 2f8:	cf 01       	movw	r24, r30
 2fa:	08 95       	ret

000002fc <_exit>:
 2fc:	f8 94       	cli

000002fe <__stop_program>:
 2fe:	ff cf       	rjmp	.-2      	; 0x2fe <__stop_program>
